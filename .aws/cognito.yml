Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: serverless-authorizer-${self:provider.stage}-user-pool
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
  CognitoUserPoolDomain: 
    Type: AWS::Cognito::UserPoolDomain 
    Properties:
      UserPoolId:
        Ref: CognitoUserPool 
      Domain: "serverless-authorizer-authorizer"
  CognitoUserPoolResourceServer: 
    Type: AWS::Cognito::UserPoolResourceServer
    Properties: 
      UserPoolId:
        Ref: CognitoUserPool
      Identifier: "api.serverless-authorizer-authorizer.com" 
      Name: "serverless-authorizer-resource-server" 
      Scopes: 
      - ScopeName: "serverless-authorizer.health.read" 
        ScopeDescription: "Health endpoint for serverless-authorizer service." 
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: serverless-authorizer-user-app
      UserPoolId:
        Ref: CognitoUserPool
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: true
      AllowedOAuthFlows: 
          - client_credentials
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - "api.serverless-authorizer-authorizer.com/serverless-authorizer.health.read"